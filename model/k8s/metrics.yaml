groups:
  # k8s.pod.* metrics
  - id: metric.k8s.pod.uptime
    type: metric
    metric_name: k8s.pod.uptime
    stability: experimental
    brief: "The time the Pod has been running"
    note: |
      Instrumentations SHOULD use a gauge with type `double` and measure uptime in seconds as a floating point number with the highest precision available.
      The actual accuracy would depend on the instrumentation and operating system.
    instrument: gauge
    unit: "s"
  # k8s.pod.cpu.* metrics
  - id: metric.k8s.pod.cpu.time
    type: metric
    metric_name: k8s.pod.cpu.time
    stability: experimental
    brief: "Total CPU time consumed"
    note: >
      Total CPU time consumed by the specific Pod on all available CPU cores
    instrument: counter
    unit: "s"
  - id: metric.k8s.pod.cpu.usage
    type: metric
    metric_name: k8s.pod.cpu.usage
    stability: experimental
    brief: "Pod's CPU usage, measured in cpus. Range from 0 to the number of allocatable CPUs"
    note: >
      CPU usage of the specific Pod on all available CPU cores, averaged over the sample window
    instrument: gauge
    unit: "{cpu}"

  # k8s.pod.memory.* metrics
  - id: metric.k8s.pod.memory.usage
    type: metric
    metric_name: k8s.pod.memory.usage
    stability: experimental
    brief: "Memory usage of the Pod"
    note: >
      Total memory usage of the Pod
    instrument: gauge
    unit: "By"

  # k8s.pod.network.* metrics
  - id: metric.k8s.pod.network.io
    type: metric
    metric_name: k8s.pod.network.io
    stability: experimental
    brief: "Network bytes for the Pod"
    instrument: counter
    unit: "By"
    attributes:
      - ref: network.interface.name
      - ref: network.io.direction
  - id: metric.k8s.pod.network.errors
    type: metric
    metric_name: k8s.pod.network.errors
    stability: experimental
    brief: "Pod network errors"
    instrument: counter
    unit: "{error}"
    attributes:
      - ref: network.interface.name
      - ref: network.io.direction

  # k8s.node.* metrics
  - id: metric.k8s.node.uptime
    type: metric
    metric_name: k8s.node.uptime
    stability: experimental
    brief: "The time the Node has been running"
    note: |
      Instrumentations SHOULD use a gauge with type `double` and measure uptime in seconds as a floating point number with the highest precision available.
      The actual accuracy would depend on the instrumentation and operating system.
    instrument: gauge
    unit: "s"
  # k8s.node.cpu.* metrics
  - id: metric.k8s.node.cpu.time
    type: metric
    metric_name: k8s.node.cpu.time
    stability: experimental
    brief: "Total CPU time consumed"
    note: >
      Total CPU time consumed by the specific Node on all available CPU cores
    instrument: counter
    unit: "s"
  - id: metric.k8s.node.cpu.usage
    type: metric
    metric_name: k8s.node.cpu.usage
    stability: experimental
    brief: "Node's CPU usage, measured in cpus. Range from 0 to the number of allocatable CPUs"
    note: >
      CPU usage of the specific Node on all available CPU cores, averaged over the sample window
    instrument: gauge
    unit: "{cpu}"

  # k8s.node.memory.* metrics
  - id: metric.k8s.node.memory.usage
    type: metric
    metric_name: k8s.node.memory.usage
    stability: experimental
    brief: "Memory usage of the Node"
    note: >
      Total memory usage of the Node
    instrument: gauge
    unit: "By"

  # k8s.node.network.* metrics
  - id: metric.k8s.node.network.io
    type: metric
    metric_name: k8s.node.network.io
    stability: experimental
    brief: "Network bytes for the Node"
    instrument: counter
    unit: "By"
    attributes:
      - ref: network.interface.name
      - ref: network.io.direction
  - id: metric.k8s.node.network.errors
    type: metric
    metric_name: k8s.node.network.errors
    stability: experimental
    brief: "Node network errors"
    instrument: counter
    unit: "{error}"
    attributes:
      - ref: network.interface.name
      - ref: network.io.direction

  # k8s.deployment.* metrics
  - id: metric.k8s.deployment.desired
    type: metric
    metric_name: k8s.deployment.desired
    stability: experimental
    brief: "Number of desired pods in this deployment"
    note: |
      This metric aligns with the `replicas` field of the
      [K8s Deployment Spec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#deploymentspec-v1-apps)
    instrument: gauge
    unit: "{pod}"
  - id: metric.k8s.deployment.available
    type: metric
    metric_name: k8s.deployment.available
    stability: experimental
    brief: "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment"
    note: |
      This metric aligns with the `availableReplicas` field of the
      [K8s Deployment Status](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#deploymentstatus-v1-apps)
    instrument: gauge
    unit: "{pod}"

  # k8s.replicaset.* metrics
  - id: metric.k8s.replicaset.desired
    type: metric
    metric_name: k8s.replicaset.desired
    stability: experimental
    brief: "Number of desired pods in this replicaset"
    note: |
      This metric aligns with the `replicas` field of the
      [K8s ReplicaSet Spec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#replicasetspec-v1-apps)
    instrument: gauge
    unit: "{pod}"
  - id: metric.k8s.replicaset.available
    type: metric
    metric_name: k8s.replicaset.available
    stability: experimental
    brief: "Total number of available pods (ready for at least minReadySeconds) targeted by this replicaset"
    note: |
      This metric aligns with the `availableReplicas` field of the
      [K8s ReplicaSet Status](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#replicasetstatus-v1-apps)
    instrument: gauge
    unit: "{pod}"

  # k8s.replication_controller.* metrics
  - id: metric.k8s.replication_controller.desired
    type: metric
    metric_name: k8s.replication_controller.desired
    stability: experimental
    brief: "Number of desired pods in this replication controller"
    note: |
      This metric aligns with the `replicas` field of the
      [K8s ReplicationController Spec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#replicationcontrollerspec-v1-core)
    instrument: gauge
    unit: "{pod}"
  - id: metric.k8s.replication_controller.available
    type: metric
    metric_name: k8s.replication_controller.available
    stability: experimental
    brief: "Total number of available pods (ready for at least minReadySeconds) targeted by this replication controller"
    note: |
      This metric aligns with the `availableReplicas` field of the
      [K8s ReplicationController Status](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#replicationcontrollerstatus-v1-core)
    instrument: gauge
    unit: "{pod}"
